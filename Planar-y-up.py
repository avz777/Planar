# Planar 5; python version 3.9
# x1(n); y1(n); z1(n); x2(n); y2(n); z2(n); x3(n); y3(n); z3(n) points, n - number of polygons, nv - number of vertexes
import sys
import math

ddir=[]
dip=[]
xx=[]
yy=[]
zz=[]

x=[]
y=[]
z=[]

f1=[]
f2=[]
f3=[]

x1=[]
x2=[]
x3=[]
y1=[]
y2=[]
y3=[]
z1=[]
z2=[]
z3=[]
n=0
nv=0
nn=0
ax=0.0
ay=0.0
az=0.0

v1=0
v2=0
v3=0

#Read OBJ file (Y - upward)
imm=input("OBJ file:")
input2 = open(imm, "r")
text1=input2.readlines()
input2.close()
for line in text1:
    items2 = line.strip("()\n").split(" ")
    if items2[0]=="v":
        xx.append(float(items2[1]))
        zz.append(float(items2[2]))
        yy.append(-float(items2[3]))
        nv=nv+1
    if items2[0]=="f":
        f1.append(int(items2[1]))
        f2.append(int(items2[2]))
        f3.append(int(items2[3]))
        n=n+1
print("Number of vertexes")
print(nv)
print("Number of faces:")
print(n)
for i in range(0,n):
    v1=f1[i]-1
    v2=f2[i]-1
    v3=f3[i]-1
    x1.append(xx[v1])
    x2.append(xx[v2])
    x3.append(xx[v3])
    y1.append(yy[v1])
    y2.append(yy[v2])
    y3.append(yy[v3])
    z1.append(zz[v1])
    z2.append(zz[v2])
    z3.append(zz[v3])

###############################
ouf=input("Txt file, semicolon delimited:")
output1 = open(ouf, "w")
###############################
#Calculate
###############################
for i in range(0,n):
    ddir.append(0.0)
    dip.append(0.0)
    A = y1[i] * (z2[i] - z3[i]) + y2[i] * (z3[i] - z1[i]) + y3[i] * (z1[i] - z2[i])
    B = z1[i] * (x2[i] - x3[i]) + z2[i] * (x3[i] - x1[i]) + z3[i] * (x1[i] - x2[i])
    C = x1[i] * (y2[i] - y3[i]) + x2[i] * (y3[i] - y1[i]) + x3[i] * (y1[i] - y2[i])
    D = -(x1[i] * (y2[i] * z3[i] - y3[i] * z2[i]) + x2[i] * (y3[i] * z1[i] - y1[i] * z3[i])+ x3[i] * (y1[i] * z2[i] - y2[i] * z1[i]))
    if C==0:
            C = 0.00001
    if B==0:
            B=0.00001
    if A==0:
        A=0.00001
    ddir[i] = math.atan(-A / B) + (C / abs(C)) * (3.1415926 / 2.0)
    dip[i] = math.atan((math.sqrt(A * A + B * B)) / C)
    ddir[i] = 270.0 + 180.0 * ddir[i] / 3.1415926
    if ddir[i]<0.0:
        ddir[i]=ddir[i]+360.0
    if ddir[i]>360.0:
        ddir[i]=ddir[i]-360.0
    
    dip[i] = abs(180.0 * dip[i] / 3.1415926)
    ax=(x1[i]+x2[i]+x3[i])/3.0
    ay=(y1[i]+y2[i]+y3[i])/3.0
    az=(z1[i]+z2[i]+z3[i])/3.0
    x.append(ax)
    y.append(ay)
    z.append(az)
    text=str(i) + ";"+str(ax)+";"+str(ay)+";"+str(az)+";"+str(ddir[i])+";"+str(dip[i])+"\n"
    output1.write(text)
output1.close()
nn=n
r=0.0
g=0.0
b=0.0
fl="n"
fl=input("Export dip as OBJ file/ (y/n)")
if fl=="y" or fl=="Y":
    ouf=input("Dip OBJ file: ")
    output2=open(ouf, "w")
########## OBJ output #####
    text="##### Generated by Planar; Dip"+"\n"
    output2.write(text)
    for i in range(0,nn):
        r=round(dip[i]/90.0, 6)
        g=round(1.0-dip[i]/90.0, 6)
        b=round(abs(1.0-dip[i]/45.0), 6)
        
        text="v" + " "+str(x[i])+" "+str(y[i])+" "+str(z[i])+" "+" "+str(r)+" "+str(g)+" "+str(b)+"\n"
        output2.write(text)
    text="#End of file"+"\n"
    output2.write(text)
    output2.close()
else:
    print("Canceled")
fl="n"
fl=input("Export dipdir as OBJ file/ (y/n)")
if fl=="y" or fl=="Y":
    ouf=input("DipDir OBJ file: ")
    output2=open(ouf, "w")
########## OBJ output #####
    text="##### Generated by Planar, DipDir"+"\n"
    output2.write(text)
    for i in range(0,nn):
        r=round(ddir[i]/360.0, 6)
        g=round(1.0-ddir[i]/360.0, 6)
        b=round(abs(1.0-ddir[i]/180.0), 6)
        
        text="v" + " "+str(x[i])+" "+str(y[i])+" "+str(z[i])+" "+" "+str(r)+" "+str(g)+" "+str(b)+"\n"
        output2.write(text)
    text="#End of file"+"\n"
    output2.write(text)
    output2.close()
else:
    print("Canceled")

print("Finished")
